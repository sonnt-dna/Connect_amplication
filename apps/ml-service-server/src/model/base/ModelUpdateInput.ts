/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { EnumModelStatus } from "./EnumModelStatus";

import {
  IsEnum,
  IsOptional,
  IsNumber,
  Min,
  Max,
  IsString,
  MaxLength,
  ValidateNested,
} from "class-validator";

import { TrainingJobUpdateManyWithoutModelsInput } from "./TrainingJobUpdateManyWithoutModelsInput";
import { Type } from "class-transformer";
import { PredictionUpdateManyWithoutModelsInput } from "./PredictionUpdateManyWithoutModelsInput";

@InputType()
class ModelUpdateInput {
  @ApiProperty({
    required: false,
    enum: EnumModelStatus,
  })
  @IsEnum(EnumModelStatus)
  @IsOptional()
  @Field(() => EnumModelStatus, {
    nullable: true,
  })
  status?: "Option1" | null;

  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsNumber()
  @Min(-999999999)
  @Max(999999999)
  @IsOptional()
  @Field(() => Number, {
    nullable: true,
  })
  accuracy?: number | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  name?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  version?: string | null;

  @ApiProperty({
    required: false,
    type: () => TrainingJobUpdateManyWithoutModelsInput,
  })
  @ValidateNested()
  @Type(() => TrainingJobUpdateManyWithoutModelsInput)
  @IsOptional()
  @Field(() => TrainingJobUpdateManyWithoutModelsInput, {
    nullable: true,
  })
  trainingJobs?: TrainingJobUpdateManyWithoutModelsInput;

  @ApiProperty({
    required: false,
    type: () => PredictionUpdateManyWithoutModelsInput,
  })
  @ValidateNested()
  @Type(() => PredictionUpdateManyWithoutModelsInput)
  @IsOptional()
  @Field(() => PredictionUpdateManyWithoutModelsInput, {
    nullable: true,
  })
  predictions?: PredictionUpdateManyWithoutModelsInput;
}

export { ModelUpdateInput as ModelUpdateInput };
